# enable this line for profiling (also zprof at the end of this file)
# zmodload zsh/zprof

# this function can be used in place of `source` to profile zsh startup time
function load() {
    timer=$(($(gdate +%s%N)/1000000))

    source $1

    now=$(($(gdate +%s%N)/1000000))
    elapsed=$(($now-$timer))
    echo $elapsed":" $1
}

# Shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# Project folder that we can `c [tab]` to
export PROJECTS=~/code

if [[ "$(uname -s)" == "Darwin" ]]; then
    export OS='OSX'
else
    export OS='LINUX'
fi

# Load zsh prompt
source $ZSH/zsh/prompt.sh

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi

# Find all zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# Load the path files
for file in ${(M)config_files:#*/path.zsh}; do
    source $file
done

# Load everything except the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
    source $file
done

# Initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit; compinit
# setopt completealiases

# Load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
    source $file
done

unset config_files
unsetopt nomatch

# Enable fzf fuzzy finder
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# enable this line for profiling (also zmodload at the top of this file)
# zprof

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
